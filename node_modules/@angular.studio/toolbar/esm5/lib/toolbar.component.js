import { __decorate } from "tslib";
import { Component, EventEmitter, Input, Output } from '@angular/core';
var ToolbarComponent = /** @class */ (function () {
    function ToolbarComponent() {
        this.onClick = new EventEmitter();
    }
    __decorate([
        Input()
    ], ToolbarComponent.prototype, "config", void 0);
    __decorate([
        Output()
    ], ToolbarComponent.prototype, "onClick", void 0);
    ToolbarComponent = __decorate([
        Component({
            selector: 'toolbar',
            template: "\n\n        <div class=\"wrapper mat-elevation-z6\"\n             [style.background-color]=\"config.backgroundColor\">\n\n            <div class=\"left\">\n\n                <ng-content select=\"[left]\"></ng-content>\n\n            </div>\n\n            <div class=\"center\">\n\n                <ng-content select=\"[center]\"></ng-content>\n\n            </div>\n\n            <div class=\"right\">\n\n                <div class=\"menu\">\n\n                    <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n\n                        <i [class]=\"config.menuIconClass\"\n                           [style.color]=\"config.menuIconColor\"\n                           [style.font-size]=\"config.menuIconFontSize\"></i>\n\n                    </button>\n\n                    <mat-menu #menu=\"matMenu\"\n                              [backdropClass]=\"config.menuClass\">\n\n                        <button *ngFor=\"let item of config.menuItems\"\n                                (click)=\"onClick.emit(item)\"\n                                mat-menu-item>\n\n                            <i *ngIf=\"item.iconClass\"\n                               [class]=\"item.iconClass\"\n                               style=\"margin-right: 10px\"\n                               [style.color]=\"item.iconColor\"></i>\n\n                            <span [style.color]=\"item.labelColor\">{{ item.label }}</span>\n\n                        </button>\n\n                    </mat-menu>\n\n                </div>\n\n            </div>\n\n        </div>\n\n    ",
            styles: [":host .wrapper{display:flex;align-items:center}:host .wrapper .center{flex:1}:host .wrapper .right .menu{display:flex;align-items:center;padding:5px}"]
        })
    ], ToolbarComponent);
    return ToolbarComponent;
}());
export { ToolbarComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbGJhci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYW5ndWxhci5zdHVkaW8vdG9vbGJhci8iLCJzb3VyY2VzIjpbImxpYi90b29sYmFyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQWtFdkU7SUFBQTtRQUlxQixZQUFPLEdBQWtDLElBQUksWUFBWSxFQUFFLENBQUM7SUFFakYsQ0FBQztJQUpZO1FBQVIsS0FBSyxFQUFFO29EQUF3QjtJQUV0QjtRQUFULE1BQU0sRUFBRTtxREFBb0U7SUFKcEUsZ0JBQWdCO1FBOUQ1QixTQUFTLENBQUM7WUFFUCxRQUFRLEVBQUUsU0FBUztZQUVuQixRQUFRLEVBQUUsdWhEQXFEVDs7U0FJSixDQUFDO09BQ1csZ0JBQWdCLENBTTVCO0lBQUQsdUJBQUM7Q0FBQSxBQU5ELElBTUM7U0FOWSxnQkFBZ0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVG9vbGJhciB9ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmcm9tICcuL3Rvb2xiYXInO1xuaW1wb3J0IHsgVG9vbGJhck1lbnVJdGVtIH0gICAgICAgICAgICAgICAgICAgICAgICBmcm9tICcuL3Rvb2xiYXItbWVudS1pdGVtJztcblxuQENvbXBvbmVudCh7XG5cbiAgICBzZWxlY3RvcjogJ3Rvb2xiYXInLFxuXG4gICAgdGVtcGxhdGU6IGBcblxuICAgICAgICA8ZGl2IGNsYXNzPVwid3JhcHBlciBtYXQtZWxldmF0aW9uLXo2XCJcbiAgICAgICAgICAgICBbc3R5bGUuYmFja2dyb3VuZC1jb2xvcl09XCJjb25maWcuYmFja2dyb3VuZENvbG9yXCI+XG5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJsZWZ0XCI+XG5cbiAgICAgICAgICAgICAgICA8bmctY29udGVudCBzZWxlY3Q9XCJbbGVmdF1cIj48L25nLWNvbnRlbnQ+XG5cbiAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2VudGVyXCI+XG5cbiAgICAgICAgICAgICAgICA8bmctY29udGVudCBzZWxlY3Q9XCJbY2VudGVyXVwiPjwvbmctY29udGVudD5cblxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyaWdodFwiPlxuXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1lbnVcIj5cblxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIG1hdC1pY29uLWJ1dHRvbiBbbWF0TWVudVRyaWdnZXJGb3JdPVwibWVudVwiPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICA8aSBbY2xhc3NdPVwiY29uZmlnLm1lbnVJY29uQ2xhc3NcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgW3N0eWxlLmNvbG9yXT1cImNvbmZpZy5tZW51SWNvbkNvbG9yXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIFtzdHlsZS5mb250LXNpemVdPVwiY29uZmlnLm1lbnVJY29uRm9udFNpemVcIj48L2k+XG5cbiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG5cbiAgICAgICAgICAgICAgICAgICAgPG1hdC1tZW51ICNtZW51PVwibWF0TWVudVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbYmFja2Ryb3BDbGFzc109XCJjb25maWcubWVudUNsYXNzXCI+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gKm5nRm9yPVwibGV0IGl0ZW0gb2YgY29uZmlnLm1lbnVJdGVtc1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChjbGljayk9XCJvbkNsaWNrLmVtaXQoaXRlbSlcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXQtbWVudS1pdGVtPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgKm5nSWY9XCJpdGVtLmljb25DbGFzc1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW2NsYXNzXT1cIml0ZW0uaWNvbkNsYXNzXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT1cIm1hcmdpbi1yaWdodDogMTBweFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW3N0eWxlLmNvbG9yXT1cIml0ZW0uaWNvbkNvbG9yXCI+PC9pPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gW3N0eWxlLmNvbG9yXT1cIml0ZW0ubGFiZWxDb2xvclwiPnt7IGl0ZW0ubGFiZWwgfX08L3NwYW4+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuXG4gICAgICAgICAgICAgICAgICAgIDwvbWF0LW1lbnU+XG5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgPC9kaXY+XG5cbiAgICBgLFxuXG4gICAgc3R5bGVVcmxzOiBbICd0b29sYmFyLmNvbXBvbmVudC5zY3NzJyBdXG5cbn0pXG5leHBvcnQgY2xhc3MgVG9vbGJhckNvbXBvbmVudCB7XG5cbiAgICBASW5wdXQoKSBwdWJsaWMgY29uZmlnOiBUb29sYmFyO1xuXG4gICAgQE91dHB1dCgpIHB1YmxpYyBvbkNsaWNrOiBFdmVudEVtaXR0ZXI8VG9vbGJhck1lbnVJdGVtPiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxufVxuIl19
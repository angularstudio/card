import { __decorate } from "tslib";
import { Component, EventEmitter, Input, Output } from '@angular/core';
let ToolbarComponent = class ToolbarComponent {
    constructor() {
        this.onClick = new EventEmitter();
    }
};
__decorate([
    Input()
], ToolbarComponent.prototype, "config", void 0);
__decorate([
    Output()
], ToolbarComponent.prototype, "onClick", void 0);
ToolbarComponent = __decorate([
    Component({
        selector: 'toolbar',
        template: `

        <div class="wrapper mat-elevation-z6"
             [style.background-color]="config.backgroundColor">

            <div class="left">

                <ng-content select="[left]"></ng-content>

            </div>

            <div class="center">

                <ng-content select="[center]"></ng-content>

            </div>

            <div class="right">

                <div class="menu">

                    <button mat-icon-button [matMenuTriggerFor]="menu">

                        <i [class]="config.menuIconClass"
                           [style.color]="config.menuIconColor"
                           [style.font-size]="config.menuIconFontSize"></i>

                    </button>

                    <mat-menu #menu="matMenu"
                              [backdropClass]="config.menuClass">

                        <button *ngFor="let item of config.menuItems"
                                (click)="onClick.emit(item)"
                                mat-menu-item>

                            <i *ngIf="item.iconClass"
                               [class]="item.iconClass"
                               style="margin-right: 10px"
                               [style.color]="item.iconColor"></i>

                            <span [style.color]="item.labelColor">{{ item.label }}</span>

                        </button>

                    </mat-menu>

                </div>

            </div>

        </div>

    `,
        styles: [":host .wrapper{display:flex;align-items:center}:host .wrapper .center{flex:1}:host .wrapper .right .menu{display:flex;align-items:center;padding:5px}"]
    })
], ToolbarComponent);
export { ToolbarComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbGJhci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYW5ndWxhci5zdHVkaW8vdG9vbGJhci8iLCJzb3VyY2VzIjpbImxpYi90b29sYmFyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQWtFdkUsSUFBYSxnQkFBZ0IsR0FBN0IsTUFBYSxnQkFBZ0I7SUFBN0I7UUFJcUIsWUFBTyxHQUFrQyxJQUFJLFlBQVksRUFBRSxDQUFDO0lBRWpGLENBQUM7Q0FBQSxDQUFBO0FBSlk7SUFBUixLQUFLLEVBQUU7Z0RBQXdCO0FBRXRCO0lBQVQsTUFBTSxFQUFFO2lEQUFvRTtBQUpwRSxnQkFBZ0I7SUE5RDVCLFNBQVMsQ0FBQztRQUVQLFFBQVEsRUFBRSxTQUFTO1FBRW5CLFFBQVEsRUFBRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7S0FxRFQ7O0tBSUosQ0FBQztHQUNXLGdCQUFnQixDQU01QjtTQU5ZLGdCQUFnQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBUb29sYmFyIH0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZyb20gJy4vdG9vbGJhcic7XG5pbXBvcnQgeyBUb29sYmFyTWVudUl0ZW0gfSAgICAgICAgICAgICAgICAgICAgICAgIGZyb20gJy4vdG9vbGJhci1tZW51LWl0ZW0nO1xuXG5AQ29tcG9uZW50KHtcblxuICAgIHNlbGVjdG9yOiAndG9vbGJhcicsXG5cbiAgICB0ZW1wbGF0ZTogYFxuXG4gICAgICAgIDxkaXYgY2xhc3M9XCJ3cmFwcGVyIG1hdC1lbGV2YXRpb24tejZcIlxuICAgICAgICAgICAgIFtzdHlsZS5iYWNrZ3JvdW5kLWNvbG9yXT1cImNvbmZpZy5iYWNrZ3JvdW5kQ29sb3JcIj5cblxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImxlZnRcIj5cblxuICAgICAgICAgICAgICAgIDxuZy1jb250ZW50IHNlbGVjdD1cIltsZWZ0XVwiPjwvbmctY29udGVudD5cblxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjZW50ZXJcIj5cblxuICAgICAgICAgICAgICAgIDxuZy1jb250ZW50IHNlbGVjdD1cIltjZW50ZXJdXCI+PC9uZy1jb250ZW50PlxuXG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJpZ2h0XCI+XG5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibWVudVwiPlxuXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gbWF0LWljb24tYnV0dG9uIFttYXRNZW51VHJpZ2dlckZvcl09XCJtZW51XCI+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpIFtjbGFzc109XCJjb25maWcubWVudUljb25DbGFzc1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBbc3R5bGUuY29sb3JdPVwiY29uZmlnLm1lbnVJY29uQ29sb3JcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgW3N0eWxlLmZvbnQtc2l6ZV09XCJjb25maWcubWVudUljb25Gb250U2l6ZVwiPjwvaT5cblxuICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cblxuICAgICAgICAgICAgICAgICAgICA8bWF0LW1lbnUgI21lbnU9XCJtYXRNZW51XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtiYWNrZHJvcENsYXNzXT1cImNvbmZpZy5tZW51Q2xhc3NcIj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiAqbmdGb3I9XCJsZXQgaXRlbSBvZiBjb25maWcubWVudUl0ZW1zXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGNsaWNrKT1cIm9uQ2xpY2suZW1pdChpdGVtKVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hdC1tZW51LWl0ZW0+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSAqbmdJZj1cIml0ZW0uaWNvbkNsYXNzXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbY2xhc3NdPVwiaXRlbS5pY29uQ2xhc3NcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPVwibWFyZ2luLXJpZ2h0OiAxMHB4XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbc3R5bGUuY29sb3JdPVwiaXRlbS5pY29uQ29sb3JcIj48L2k+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBbc3R5bGUuY29sb3JdPVwiaXRlbS5sYWJlbENvbG9yXCI+e3sgaXRlbS5sYWJlbCB9fTwvc3Bhbj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG5cbiAgICAgICAgICAgICAgICAgICAgPC9tYXQtbWVudT5cblxuICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICA8L2Rpdj5cblxuICAgIGAsXG5cbiAgICBzdHlsZVVybHM6IFsgJ3Rvb2xiYXIuY29tcG9uZW50LnNjc3MnIF1cblxufSlcbmV4cG9ydCBjbGFzcyBUb29sYmFyQ29tcG9uZW50IHtcblxuICAgIEBJbnB1dCgpIHB1YmxpYyBjb25maWc6IFRvb2xiYXI7XG5cbiAgICBAT3V0cHV0KCkgcHVibGljIG9uQ2xpY2s6IEV2ZW50RW1pdHRlcjxUb29sYmFyTWVudUl0ZW0+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG59XG4iXX0=
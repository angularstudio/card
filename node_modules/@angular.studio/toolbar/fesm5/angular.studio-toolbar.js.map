{"version":3,"file":"angular.studio-toolbar.js","sources":["ng://@angular.studio/toolbar/lib/toolbar.service.ts","ng://@angular.studio/toolbar/lib/toolbar.component.ts","ng://@angular.studio/toolbar/lib/toolbar.module.ts","ng://@angular.studio/toolbar/lib/toolbar.ts","ng://@angular.studio/toolbar/public-api.ts","ng://@angular.studio/toolbar/angular.studio-toolbar.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToolbarService {\n\n  constructor() { }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Toolbar }                                from './toolbar';\nimport { ToolbarMenuItem }                        from './toolbar-menu-item';\n\n@Component({\n\n    selector: 'toolbar',\n\n    template: `\n\n        <div class=\"wrapper mat-elevation-z6\"\n             [style.background-color]=\"config.backgroundColor\">\n\n            <div class=\"left\">\n\n                <ng-content select=\"[left]\"></ng-content>\n\n            </div>\n\n            <div class=\"center\">\n\n                <ng-content select=\"[center]\"></ng-content>\n\n            </div>\n\n            <div class=\"right\">\n\n                <div class=\"menu\">\n\n                    <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n\n                        <i [class]=\"config.menuIconClass\"\n                           [style.color]=\"config.menuIconColor\"\n                           [style.font-size]=\"config.menuIconFontSize\"></i>\n\n                    </button>\n\n                    <mat-menu #menu=\"matMenu\"\n                              [backdropClass]=\"config.menuClass\">\n\n                        <button *ngFor=\"let item of config.menuItems\"\n                                (click)=\"onClick.emit(item)\"\n                                mat-menu-item>\n\n                            <i *ngIf=\"item.iconClass\"\n                               [class]=\"item.iconClass\"\n                               style=\"margin-right: 10px\"\n                               [style.color]=\"item.iconColor\"></i>\n\n                            <span [style.color]=\"item.labelColor\">{{ item.label }}</span>\n\n                        </button>\n\n                    </mat-menu>\n\n                </div>\n\n            </div>\n\n        </div>\n\n    `,\n\n    styleUrls: [ 'toolbar.component.scss' ]\n\n})\nexport class ToolbarComponent {\n\n    @Input() public config: Toolbar;\n\n    @Output() public onClick: EventEmitter<ToolbarMenuItem> = new EventEmitter();\n\n}\n","import { CommonModule }     from '@angular/common';\nimport { NgModule }         from '@angular/core';\nimport { MatButtonModule }  from '@angular/material/button';\nimport { MatIconModule }    from '@angular/material/icon';\nimport { MatMenuModule }    from '@angular/material/menu';\nimport { ToolbarComponent } from './toolbar.component';\n\n@NgModule({\n\n    declarations: [ ToolbarComponent ],\n    imports: [\n\n        CommonModule,\n        MatButtonModule,\n        MatIconModule,\n        MatMenuModule\n\n    ],\n    exports: [ ToolbarComponent ]\n\n})\nexport class ToolbarModule {\n}\n","import { ToolbarMenuItem } from './toolbar-menu-item';\n\nexport class Toolbar {\n\n    public backgroundColor: string;\n\n    public direction?: 'horizontal' | 'vertical' = 'horizontal';\n\n    public menuClass?: string;\n    public menuIconClass?: string;\n    public menuIconColor: string;\n    public menuIconFontSize: string;\n    public menuItems?: Array<ToolbarMenuItem>;\n\n}\n","/*\n * Public API Surface of toolbar\n */\n\nexport * from './lib/toolbar.service';\nexport * from './lib/toolbar.component';\nexport * from './lib/toolbar.module';\nexport * from './lib/toolbar';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;;;;IAOE;KAAiB;;IAFN,cAAc;QAH1B,UAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;OACW,cAAc,CAG1B;yBARD;CAKA;;;IC6DA;QAIqB,YAAO,GAAkC,IAAI,YAAY,EAAE,CAAC;KAEhF;IAJY;QAAR,KAAK,EAAE;oDAAwB;IAEtB;QAAT,MAAM,EAAE;qDAAoE;IAJpE,gBAAgB;QA9D5B,SAAS,CAAC;YAEP,QAAQ,EAAE,SAAS;YAEnB,QAAQ,EAAE,uhDAqDT;;SAIJ,CAAC;OACW,gBAAgB,CAM5B;IAAD,uBAAC;CAND;;;IC7CA;KACC;IADY,aAAa;QAdzB,QAAQ,CAAC;YAEN,YAAY,EAAE,CAAE,gBAAgB,CAAE;YAClC,OAAO,EAAE;gBAEL,YAAY;gBACZ,eAAe;gBACf,aAAa;gBACb,aAAa;aAEhB;YACD,OAAO,EAAE,CAAE,gBAAgB,CAAE;SAEhC,CAAC;OACW,aAAa,CACzB;IAAD,oBAAC;CADD;;;ICnBA;QAIW,cAAS,GAA+B,YAAY,CAAC;KAQ/D;IAAD,cAAC;AAAD,CAAC;;ACdD;;GAEG;;ACFH;;GAEG;;;;"}